UC_admit <- readr::read_csv("data/UC_admit.csv")
output$plot <- renderPlot({
UC_admit %>%
filter(Academic_Yr==input$campus) %>%
filter(Ethnicity==input$ethnicity) %>%
filter(Category== input$group) %>%
ggplot(aes(x=Campus, y=FilteredCountFR))+geom_bar(stat="identity")+labs(y=NULL, x="Campus")
ggtitle(paste(input$group,"of",input$ethnicity,"ethnicity at UC",input$campus))+
theme(plot.title = element_text(size = 24, hjust=.5, vjust = 3.5, margin = margin(t=20)),
axis.text = element_text(size = 12),
axis.title = element_text(size = 12),
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0)))
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions Data Viewer", titleWidth = 300),
dashboardSidebar(disable=T),
dashboardBody(
tags$head(tags$style(HTML('
.skin-blue .main-header .navbar {
background-color: #355B85;
}
.skin-blue .main-header .logo {
background-color: #002855;
}
'))),
fluidRow(
box(width = 12,
plotOutput("plot", width = "600px", height = "400px")
)),
fluidRow(
box(title = "Graph Options", width = 12,
selectInput("year", "Year", choices = c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019"),
selected = "2019"),
selectInput("ethnicity", "Select Ethnicity", choices = c("African American", "All", "American Indian", "Asian", "Chicano/Latino", "International", "Unknown", "White"),
selected = "All"),
selectInput("group", "Group", choices = c("Admits", "Applicants", "Enrollees"),
selected = "Admits")
))),skin="blue")
server <- function(input, output, session) {
UC_admit <- readr::read_csv("data/UC_admit.csv")
output$plot <- renderPlot({
UC_admit %>%
filter(Academic_Yr==input$campus) %>%
filter(Ethnicity==input$ethnicity) %>%
filter(Category== input$group) %>%
ggplot(aes(x=Campus, y=FilteredCountFR))+geom_bar(stat="identity")+labs(y=NULL, x="Campus")
ggtitle(paste(input$group,"of",input$ethnicity,"ethnicity at UC",input$campus))
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions Data Viewer", titleWidth = 300),
dashboardSidebar(disable=T),
dashboardBody(
tags$head(tags$style(HTML('
.skin-blue .main-header .navbar {
background-color: #355B85;
}
.skin-blue .main-header .logo {
background-color: #002855;
}
'))),
fluidRow(
box(width = 12,
plotOutput("plot", width = "600px", height = "400px")
)),
fluidRow(
box(title = "Graph Options", width = 12,
selectInput("year", "Year", choices = c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019"),
selected = "2019"),
selectInput("ethnicity", "Select Ethnicity", choices = c("African American", "All", "American Indian", "Asian", "Chicano/Latino", "International", "Unknown", "White"),
selected = "All"),
selectInput("group", "Group", choices = c("Admits", "Applicants", "Enrollees"),
selected = "Admits")
))),skin="blue")
server <- function(input, output, session) {
UC_admit <- readr::read_csv("data/UC_admit.csv")
output$plot <- renderPlot({
UC_admit %>%
filter(Academic_Yr==input$year) %>%
filter(Ethnicity==input$ethnicity) %>%
filter(Category== input$group) %>%
ggplot(aes(x=Campus, y=FilteredCountFR))+geom_bar(stat="identity")+labs(y=NULL, x="Campus")
ggtitle(paste(input$group,"of",input$ethnicity,"ethnicity at UC",input$campus))+
theme(plot.title = element_text(size = 24, hjust=.5, vjust = 3.5, margin = margin(t=20)),
axis.text = element_text(size = 12),
axis.title = element_text(size = 12),
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0)))
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
UC_admit %>%
filter(Academic_Yr=="2019") %>%
filter(Ethnicity=="All") %>%
filter(Category== "Admits") %>%
ggplot(aes(x=Campus, y=FilteredCountFR))+geom_bar(stat="identity")+labs(y=NULL, x="Campus")
ggtitle(paste(input$group,"of",input$ethnicity,"ethnicity at UC",input$campus))+
theme(plot.title = element_text(size = 24, hjust=.5, vjust = 3.5, margin = margin(t=20)),
axis.text = element_text(size = 12),
axis.title = element_text(size = 12),
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0)))
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions Data Viewer", titleWidth = 300),
dashboardSidebar(disable=T),
dashboardBody(
tags$head(tags$style(HTML('
.skin-blue .main-header .navbar {
background-color: #355B85;
}
.skin-blue .main-header .logo {
background-color: #002855;
}
'))),
fluidRow(
box(width = 12,
plotOutput("plot", width = "600px", height = "400px")
)),
fluidRow(
box(title = "Graph Options", width = 12,
selectInput("year", "Year", choices = c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019"),
selected = "2019"),
selectInput("ethnicity", "Select Ethnicity", choices = c("African American", "All", "American Indian", "Asian", "Chicano/Latino", "International", "Unknown", "White"),
selected = "All"),
selectInput("group", "Group", choices = c("Admits", "Applicants", "Enrollees"),
selected = "Admits")
))),skin="blue")
server <- function(input, output, session) {
UC_admit <- readr::read_csv("data/UC_admit.csv")
output$plot <- renderPlot({
UC_admit %>%
filter(Academic_Yr==input$year) %>%
filter(Ethnicity==input$ethnicity) %>%
filter(Category== input$group) %>%
ggplot(aes(x=Campus, y=FilteredCountFR))+geom_bar(stat="identity")+labs(y=NULL, x="Campus")+
ggtitle(paste(input$group,"of",input$ethnicity,"ethnicity at UC",input$campus))+
theme(plot.title = element_text(size = 24, hjust=.5, vjust = 3.5, margin = margin(t=20)),
axis.text = element_text(size = 12),
axis.title = element_text(size = 12),
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0)))
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions Data Viewer", titleWidth = 300),
dashboardSidebar(disable=T),
dashboardBody(
tags$head(tags$style(HTML('
.skin-blue .main-header .navbar {
background-color: #355B85;
}
.skin-blue .main-header .logo {
background-color: #002855;
}
'))),
fluidRow(
box(width = 12,
plotOutput("plot", width = "600px", height = "400px")
)),
fluidRow(
box(title = "Graph Options", width = 12,
selectInput("year", "Year", choices = c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019"),
selected = "2019"),
selectInput("ethnicity", "Select Ethnicity", choices = c("African American", "All", "American Indian", "Asian", "Chicano/Latino", "International", "Unknown", "White"),
selected = "All"),
selectInput("group", "Group", choices = c("Admits", "Applicants", "Enrollees"),
selected = "Admits")
))),skin="blue")
server <- function(input, output, session) {
UC_admit <- readr::read_csv("data/UC_admit.csv")
output$plot <- renderPlot({
UC_admit %>%
filter(Academic_Yr==input$year) %>%
filter(Ethnicity==input$ethnicity) %>%
filter(Category== input$group) %>%
ggplot(aes(x=Campus, y=FilteredCountFR))+geom_bar(stat="identity")+labs(y=NULL, x="Campus")+
ggtitle(paste(input$group,"of",input$ethnicity,"ethnicity for",input$year))+
theme(plot.title = element_text(size = 24, hjust=.5, vjust = 3.5, margin = margin(t=20)),
axis.text = element_text(size = 12),
axis.title = element_text(size = 12),
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0)),
axis.text.x = element_text(angle=45)
)
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions Data Viewer", titleWidth = 300),
dashboardSidebar(disable=T),
dashboardBody(
tags$head(tags$style(HTML('
.skin-blue .main-header .navbar {
background-color: #355B85;
}
.skin-blue .main-header .logo {
background-color: #002855;
}
'))),
fluidRow(
box(width = 12,
plotOutput("plot", width = "600px", height = "400px")
)),
fluidRow(
box(title = "Graph Options", width = 12,
selectInput("year", "Year", choices = c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019"),
selected = "2019"),
selectInput("ethnicity", "Select Ethnicity", choices = c("African American", "All", "American Indian", "Asian", "Chicano/Latino", "International", "Unknown", "White"),
selected = "All"),
selectInput("group", "Group", choices = c("Admits", "Applicants", "Enrollees"),
selected = "Admits")
))),skin="blue")
server <- function(input, output, session) {
UC_admit <- readr::read_csv("data/UC_admit.csv")
output$plot <- renderPlot({
UC_admit %>%
filter(Academic_Yr==input$year) %>%
filter(Ethnicity==input$ethnicity) %>%
filter(Category== input$group) %>%
ggplot(aes(x=Campus, y=FilteredCountFR))+geom_bar(stat="identity")+labs(y=NULL, x="Campus")+
ggtitle(paste(input$group,"of",input$ethnicity,"ethnicity for",input$year))+
theme(plot.title = element_text(size = 24, hjust=.5, vjust = 3.5, margin = margin(t=20)),
axis.text = element_text(size = 12),
axis.title = element_text(size = 12),
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0)),
axis.text.x = element_text(angle=45, hjust=2)
)
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions Data Viewer", titleWidth = 300),
dashboardSidebar(disable=T),
dashboardBody(
tags$head(tags$style(HTML('
.skin-blue .main-header .navbar {
background-color: #355B85;
}
.skin-blue .main-header .logo {
background-color: #002855;
}
'))),
fluidRow(
box(width = 12,
plotOutput("plot", width = "600px", height = "400px")
)),
fluidRow(
box(title = "Graph Options", width = 12,
selectInput("year", "Year", choices = c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019"),
selected = "2019"),
selectInput("ethnicity", "Select Ethnicity", choices = c("African American", "All", "American Indian", "Asian", "Chicano/Latino", "International", "Unknown", "White"),
selected = "All"),
selectInput("group", "Group", choices = c("Admits", "Applicants", "Enrollees"),
selected = "Admits")
))),skin="blue")
server <- function(input, output, session) {
UC_admit <- readr::read_csv("data/UC_admit.csv")
output$plot <- renderPlot({
UC_admit %>%
filter(Academic_Yr==input$year) %>%
filter(Ethnicity==input$ethnicity) %>%
filter(Category== input$group) %>%
ggplot(aes(x=Campus, y=FilteredCountFR))+geom_bar(stat="identity")+labs(y=NULL, x="Campus")+
ggtitle(paste(input$group,"of",input$ethnicity,"ethnicity for",input$year))+
theme(plot.title = element_text(size = 24, hjust=.5, vjust = 3.5, margin = margin(t=20)),
axis.text = element_text(size = 12),
axis.title = element_text(size = 12),
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0)),
axis.text.x = element_text(angle=45, hjust=1)
)
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions Data Viewer", titleWidth = 300),
dashboardSidebar(disable=T),
dashboardBody(
tags$head(tags$style(HTML('
.skin-blue .main-header .navbar {
background-color: #355B85;
}
.skin-blue .main-header .logo {
background-color: #002855;
}
'))),
fluidRow(
box(width = 12,
plotOutput("plot", width = "600px", height = "400px")
)),
fluidRow(
box(title = "Graph Options", width = 12,
selectInput("year", "Year", choices = c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019"),
selected = "2019"),
selectInput("ethnicity", "Select Ethnicity", choices = c("African American", "All", "American Indian", "Asian", "Chicano/Latino", "International", "Unknown", "White"),
selected = "All"),
selectInput("group", "Group", choices = c("Admits", "Applicants", "Enrollees"),
selected = "Admits")
))),skin="blue")
server <- function(input, output, session) {
UC_admit <- readr::read_csv("data/UC_admit.csv")
output$plot <- renderPlot({
UC_admit %>%
filter(Academic_Yr==input$year) %>%
filter(Ethnicity==input$ethnicity) %>%
filter(Category== input$group) %>%
ggplot(aes(x=Campus, y=FilteredCountFR))+geom_bar(stat="identity")+labs(y=NULL, x="Campus")+
ggtitle(paste("UC-Wide",input$group,"of",input$ethnicity,"Ethnicity for",input$year))+
theme(plot.title = element_text(size = 24, hjust=.5, vjust = 3.5, margin = margin(t=20)),
axis.text = element_text(size = 12),
axis.title = element_text(size = 12),
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0)),
axis.text.x = element_text(angle=45, hjust=1)
)
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions Data Viewer", titleWidth = 300),
dashboardSidebar(disable=T),
dashboardBody(
tags$head(tags$style(HTML('
.skin-blue .main-header .navbar {
background-color: #355B85;
}
.skin-blue .main-header .logo {
background-color: #002855;
}
'))),
fluidRow(
box(width = 12,
plotOutput("plot", width = "600px", height = "400px")
)),
fluidRow(
box(title = "Graph Options", width = 12,
selectInput("year", "Year", choices = c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019"),
selected = "2019"),
selectInput("ethnicity", "Select Ethnicity", choices = c("African American", "All", "American Indian", "Asian", "Chicano/Latino", "International", "Unknown", "White"),
selected = "All"),
selectInput("group", "Group", choices = c("Admits", "Applicants", "Enrollees"),
selected = "Admits")
))),skin="blue")
server <- function(input, output, session) {
UC_admit <- readr::read_csv("data/UC_admit.csv")
output$plot <- renderPlot({
UC_admit %>%
filter(Academic_Yr==input$year) %>%
filter(Ethnicity==input$ethnicity) %>%
filter(Category== input$group) %>%
ggplot(aes(x=Campus, y=FilteredCountFR))+geom_bar(stat="identity")+labs(y=NULL, x="Campus")+
ggtitle(paste("UC-Wide",input$group,"of",input$ethnicity,"Ethnicity for",input$year))+
theme(plot.title = element_text(size = 24, hjust=.5, vjust = 3.5, margin = margin(t=20)),
axis.text = element_text(size = 12),
axis.title = element_text(size = 12),
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0)),
axis.text.x = element_text(size=10, hjust=1)
)
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions Data Viewer", titleWidth = 300),
dashboardSidebar(disable=T),
dashboardBody(
tags$head(tags$style(HTML('
.skin-blue .main-header .navbar {
background-color: #355B85;
}
.skin-blue .main-header .logo {
background-color: #002855;
}
'))),
fluidRow(
box(width = 12,
plotOutput("plot", width = "600px", height = "400px")
)),
fluidRow(
box(title = "Graph Options", width = 12,
selectInput("year", "Year", choices = c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019"),
selected = "2019"),
selectInput("ethnicity", "Select Ethnicity", choices = c("African American", "All", "American Indian", "Asian", "Chicano/Latino", "International", "Unknown", "White"),
selected = "All"),
selectInput("group", "Group", choices = c("Admits", "Applicants", "Enrollees"),
selected = "Admits")
))),skin="blue")
server <- function(input, output, session) {
UC_admit <- readr::read_csv("data/UC_admit.csv")
output$plot <- renderPlot({
UC_admit %>%
filter(Academic_Yr==input$year) %>%
filter(Ethnicity==input$ethnicity) %>%
filter(Category== input$group) %>%
ggplot(aes(x=Campus, y=FilteredCountFR))+geom_bar(stat="identity")+labs(y=NULL, x="Campus")+
ggtitle(paste("UC-Wide",input$group,"of",input$ethnicity,"Ethnicity for",input$year))+
theme(plot.title = element_text(size = 24, hjust=.5, vjust = 3.5, margin = margin(t=20)),
axis.text = element_text(size = 12),
axis.title = element_text(size = 12),
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0)),
axis.text.x = element_text(size=10)
)
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions Data Viewer", titleWidth = 300),
dashboardSidebar(disable=T),
dashboardBody(
tags$head(tags$style(HTML('
.skin-blue .main-header .navbar {
background-color: #355B85;
}
.skin-blue .main-header .logo {
background-color: #002855;
}
'))),
fluidRow(
box(width = 12,
plotOutput("plot", width = "800px", height = "400px")
)),
fluidRow(
box(title = "Graph Options", width = 12,
selectInput("year", "Year", choices = c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019"),
selected = "2019"),
selectInput("ethnicity", "Select Ethnicity", choices = c("African American", "All", "American Indian", "Asian", "Chicano/Latino", "International", "Unknown", "White"),
selected = "All"),
selectInput("group", "Group", choices = c("Admits", "Applicants", "Enrollees"),
selected = "Admits")
))),skin="blue")
server <- function(input, output, session) {
UC_admit <- readr::read_csv("data/UC_admit.csv")
output$plot <- renderPlot({
UC_admit %>%
filter(Academic_Yr==input$year) %>%
filter(Ethnicity==input$ethnicity) %>%
filter(Category== input$group) %>%
ggplot(aes(x=Campus, y=FilteredCountFR))+geom_bar(stat="identity")+labs(y=NULL, x="Campus")+
ggtitle(paste("UC-Wide",input$group,"of",input$ethnicity,"Ethnicity for",input$year))+
theme(plot.title = element_text(size = 24, hjust=.5, vjust = 3.5, margin = margin(t=20)),
axis.text = element_text(size = 12),
axis.title = element_text(size = 12),
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0)),
axis.text.x = element_text(size=10)
)
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admissions Data Viewer", titleWidth = 300),
dashboardSidebar(disable=T),
dashboardBody(
tags$head(tags$style(HTML('
.skin-blue .main-header .navbar {
background-color: #355B85;
}
.skin-blue .main-header .logo {
background-color: #002855;
}
'))),
fluidRow(
box(width = 12,
plotOutput("plot", width = "800px", height = "500px")
)),
fluidRow(
box(title = "Graph Options", width = 12,
selectInput("year", "Year", choices = c("2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019"),
selected = "2019"),
selectInput("ethnicity", "Select Ethnicity", choices = c("African American", "All", "American Indian", "Asian", "Chicano/Latino", "International", "Unknown", "White"),
selected = "All"),
selectInput("group", "Group", choices = c("Admits", "Applicants", "Enrollees"),
selected = "Admits")
))),skin="blue")
server <- function(input, output, session) {
UC_admit <- readr::read_csv("data/UC_admit.csv")
output$plot <- renderPlot({
UC_admit %>%
filter(Academic_Yr==input$year) %>%
filter(Ethnicity==input$ethnicity) %>%
filter(Category== input$group) %>%
ggplot(aes(x=Campus, y=FilteredCountFR))+geom_bar(stat="identity")+labs(y=NULL, x=NULL)+
ggtitle(paste("UC-Wide",input$group,"of",input$ethnicity,"Ethnicity for",input$year))+
theme(plot.title = element_text(size = 24, hjust=.5, vjust = 3.5, margin = margin(t=20)),
axis.text = element_text(size = 12),
axis.title = element_text(size = 12),
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0)),
axis.text.x = element_text(size=10)
)
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
