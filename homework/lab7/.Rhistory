deaths=Deaths,
year=Year,
age_group= "Ten-Year Age Groups Code",
population= Population,
crude_rate = "Crude Rate",
cause_of_death = "ICD-10 113 Cause List",
cause_of_death_code = "ICD-10 113 Cause List Code")
cdc <- cdc_raw %>%
#remove redundant, uncessary columns
select(-c("Notes", "Year Code", "State Code", "Ten-Year Age Groups")) %>%
#remove several rows with NA values at bottom of data frame
na.omit() %>%
#NA in these data sets is coded as "Unreliable"
na_if("Unreliable") %>%
#rename column names
dplyr::rename(
state=State,
deaths=Deaths,
year=Year,
age_group= "Ten-Year Age Groups Code",
population= Population,
crude_rate = "Crude Rate",
cause_of_death = "ICD-10 113 Cause List",
cause_of_death_code = "ICD-10 113 Cause List Code")
cdc_raw <- readr::read_csv("cdc-113-ICD10.csv")
cdc <- cdc_raw %>%
#remove redundant, uncessary columns
select(-c("Notes", "Year Code", "State Code", "Ten-Year Age Groups")) %>%
#remove several rows with NA values at bottom of data frame
na.omit() %>%
#NA in these data sets is coded as "Unreliable"
na_if("Unreliable") %>%
#rename column names
dplyr::rename(
state=State,
deaths=Deaths,
year=Year,
age_group= "Ten-Year Age Groups Code",
population= Population,
crude_rate = "Crude Rate",
cause_of_death = "ICD-10 113 Cause List",
cause_of_death_code = "ICD-10 113 Cause List Code")
cdc %>%
select(year, state, cause_of_death, deaths) %>%
filter(cause_of_death == '#Human immunodeficiency virus (HIV) disease (B20-B24)') %>%
group_by(year) %>%
summarise(
total_deaths_HIV = sum(deaths)) %>%
ggplot(aes(x=year, y=total_deaths_HIV))+geom_line()
View(cdc_raw)
View(cdc)
View(cdc)
cdc %>%
select(year, state, cause_of_death, deaths) %>%
filter(cause_of_death == '#Enterocolitis due to Clostridium difficile (A04.7)') %>%
group_by(year) %>%
summarise(
total_deaths_HIV = sum(deaths)) %>%
ggplot(aes(x=year, y=total_deaths_HIV))+geom_line()
cdc$cause_of_death <- as.factor(cdc$cause_of_death)
cdc$cause_of_death <- as.factor(cdc$cause_of_death)
cdc$cause_of_death <- as.factor(cdc$cause_of_death)
levels(cause_of_death)
cdc$cause_of_death <- as.factor(cdc$cause_of_death)
levels(cause_of_death)
levels(cdc$cause_of_death)
cdc_raw1 <- readr::read_csv("cdc-ICD10.csv")
cdc1 <- cdc_raw %>%
#remove redundant, uncessary columns
select(-c("Notes", "Year Code", "State Code", "Ten-Year Age Groups")) %>%
#remove several rows with NA values at bottom of data frame
na.omit() %>%
#NA in these data sets is coded as "Unreliable"
na_if("Unreliable") %>%
#rename column names
dplyr::rename(
state=State,
deaths=Deaths,
year=Year,
age_group= "Ten-Year Age Groups Code",
population= Population,
crude_rate = "Crude Rate",
cause_of_death = "ICD-10 113 Cause List",
cause_of_death_code = "ICD-10 113 Cause List Code")
cdc1$cause_of_death <- as.factor(cdc1$cause_of_death)
levels(cdc1$cause_of_death)
levels(cdc1$cause_of_death)
levels(cdc1$cause_of_death)
levels(cdc1$cause_of_death)
levels(cdc1$cause_of_death)
levels(cdc1$cause_of_death)
View(cdc1)
View(cdc1)
cdc_raw1 <- readr::read_csv("cdc-ICD10.csv")
cdc1 <- cdc_raw1 %>%
#remove redundant, uncessary columns
select(-c("Notes", "Year Code", "State Code", "Ten-Year Age Groups")) %>%
#remove several rows with NA values at bottom of data frame
na.omit() %>%
#NA in these data sets is coded as "Unreliable"
na_if("Unreliable") %>%
#rename column names
dplyr::rename(
state=State,
deaths=Deaths,
year=Year,
age_group= "Ten-Year Age Groups Code",
population= Population,
crude_rate = "Crude Rate",
cause_of_death = "ICD-10 113 Cause List",
cause_of_death_code = "ICD-10 113 Cause List Code")
View(cdc_raw1)
View(cdc_raw1)
glimpse(cdc_raw1)
cdc1 <- cdc_raw1 %>%
#remove redundant, uncessary columns
select(-c("Notes", "Year Code", "State Code", "Ten-Year Age Groups")) %>%
#remove several rows with NA values at bottom of data frame
na.omit() %>%
#NA in these data sets is coded as "Unreliable"
na_if("Unreliable") %>%
#rename column names
dplyr::rename(
state=State,
deaths=Deaths,
year=Year,
age_group= "Ten-Year Age Groups Code",
population= Population,
crude_rate = "Crude Rate",
cause_of_death = "ICD Sub-Chapter",
cause_of_death_code = "ICD-10 113 Cause List Code")
cdc1 <- cdc_raw1 %>%
#remove redundant, uncessary columns
select(-c("Notes", "Year Code", "State Code", "Ten-Year Age Groups")) %>%
#remove several rows with NA values at bottom of data frame
na.omit() %>%
#NA in these data sets is coded as "Unreliable"
na_if("Unreliable") %>%
#rename column names
dplyr::rename(
state=State,
deaths=Deaths,
year=Year,
age_group= "Ten-Year Age Groups Code",
population= Population,
crude_rate = "Crude Rate",
cause_of_death = "ICD Sub-Chapter")
levels(cdc1$cause_of_death)
cdc1 <- cdc_raw1 %>%
#remove redundant, uncessary columns
select(-c("Notes", "Year Code", "State Code", "Ten-Year Age Groups")) %>%
#remove several rows with NA values at bottom of data frame
na.omit() %>%
#NA in these data sets is coded as "Unreliable"
na_if("Unreliable") %>%
#rename column names
dplyr::rename(
state=State,
deaths=Deaths,
year=Year,
age_group= "Ten-Year Age Groups Code",
population= Population,
crude_rate = "Crude Rate",
cause_of_death = "ICD Sub-Chapter")
View(cdc1)
View(cdc1)
cdc1$cause_of_death <- as.factor(cdc1$cause_of_death)
levels(cdc1$cause_of_death)
levels(cdc$cause_of_death)
cdc %>%
select(year, state, cause_of_death, deaths) %>%
filter(cause_of_death == 'Respiratory tuberculosis (A16)') %>%
group_by(year) %>%
summarise(
total_deaths_HIV = sum(deaths)) %>%
ggplot(aes(x=year, y=total_deaths_HIV))+geom_line()
cdc %>%
select(year, state, cause_of_death, deaths) %>%
filter(cause_of_death == 'Respiratory tuberculosis (A16)') %>%
group_by(year) %>%
summarise(
total_deaths_HIV = sum(deaths)) %>%
ggplot(aes(x=year, y=total_deaths_HIV, color=state))+geom_line()
cdc %>%
select(year, state, cause_of_death, deaths) %>%
filter(cause_of_death == 'Respiratory tuberculosis (A16)') %>%
group_by(year) %>%
summarise(
total_deaths_HIV = sum(deaths)) %>%
ggplot(aes(x=year, y=total_deaths_HIV, group=state))+geom_line()
cdc %>%
select(year, state, cause_of_death, deaths) %>%
filter(cause_of_death == 'Respiratory tuberculosis (A16)') %>%
group_by(year) %>%
summarise(
total_deaths_HIV = sum(deaths)) %>%
ggplot(aes(x=year, y=total_deaths_HIV))+geom_line(group=state)
cdc %>%
select(year, state, cause_of_death, deaths) %>%
filter(cause_of_death == 'Respiratory tuberculosis (A16)') %>%
group_by(year) %>%
summarise(
total_deaths_HIV = sum(deaths)) %>%
ggplot(aes(x=year, y=total_deaths_HIV))+geom_line(color=state)
cdc %>%
select(year, state, cause_of_death, deaths) %>%
filter(cause_of_death == 'Respiratory tuberculosis (A16)') %>%
group_by(year) %>%
summarise(
total_deaths_HIV = sum(deaths)) %>%
ggplot(aes(x=year, y=total_deaths_HIV, fill=state))+geom_line()
View(cdc)
View(cdc)
cdc %>%
select(year, state, cause_of_death, deaths) %>%
filter(cause_of_death == 'Respiratory tuberculosis (A16)') %>%
group_by(year) %>%
summarise(
total_deaths_HIV = sum(deaths)) %>%
ggplot(aes(x=year, y=total_deaths_HIV, fill="state"))+geom_line()
cdc %>%
select(year, state, cause_of_death, deaths) %>%
filter(cause_of_death == 'Respiratory tuberculosis (A16)') %>%
group_by(year) %>%
summarise(
total_deaths_HIV = sum(deaths)) %>%
ggplot(aes(x=year, y=total_deaths_HIV, color="state"))+geom_line()
cdc %>%
select(year, state, cause_of_death, deaths) %>%
filter(cause_of_death == 'Respiratory tuberculosis (A16)') %>%
group_by(state) %>%
summarise(
total_deaths_HIV = sum(deaths)) %>%
ggplot(aes(x=year, y=total_deaths_HIV, color="state"))+geom_line()
cdc %>%
select(year, state, cause_of_death, deaths) %>%
filter(cause_of_death == 'Respiratory tuberculosis (A16)') %>%
group_by(year) %>%
summarise(
total_deaths_HIV = sum(deaths)) %>%
ggplot(aes(x=year, y=total_deaths_HIV))+geom_line()
cdc %>%
select(year, state, cause_of_death, deaths) %>%
filter(cause_of_death == 'Respiratory tuberculosis (A16)') %>%
cdc %>%
select(year, state, cause_of_death, deaths) %>%
filter(cause_of_death == 'Respiratory tuberculosis (A16)')
cdc %>%
select(year, state, cause_of_death, deaths) %>%
filter(cause_of_death == 'Respiratory tuberculosis (A16)') %>%
group_by(year) %>%
summarise(
total_deaths_HIV = sum(deaths))
cdc %>%
select(year, state, cause_of_death, deaths) %>%
filter(cause_of_death == 'Respiratory tuberculosis (A16)') %>%
group_by(year, state) %>%
summarise(
total_deaths_HIV = sum(deaths))
cdc %>%
select(year, state, cause_of_death, deaths) %>%
filter(cause_of_death == 'Respiratory tuberculosis (A16)') %>%
group_by(year, state) %>%
summarise(
total_deaths_HIV = sum(deaths)) %>%
ggplot(aes(x=year, y=total_deaths_HIV, color="state"))+geom_line()
cdc %>%
select(year, state, cause_of_death, deaths) %>%
filter(cause_of_death == 'Respiratory tuberculosis (A16)') %>%
group_by(year, state) %>%
summarise(
total_deaths_HIV = sum(deaths)) %>%
ggplot(aes(x=year, y=total_deaths_HIV, fill="state"))+geom_line()
cdc %>%
select(year, state, cause_of_death, deaths) %>%
filter(cause_of_death == 'Respiratory tuberculosis (A16)') %>%
group_by(year, state) %>%
summarise(
total_deaths_HIV = sum(deaths)) %>%
ggplot(aes(x=year, y=total_deaths_HIV))+geom_line()
cdc %>%
select(year, state, cause_of_death, deaths) %>%
filter(cause_of_death == 'Respiratory tuberculosis (A16)') %>%
group_by(state) %>%
summarise(
total_deaths_HIV = sum(deaths))
cdc %>%
select(year, state, cause_of_death, deaths) %>%
filter(cause_of_death == 'Respiratory tuberculosis (A16)') %>%
group_by(state,year)
runApp('UCAdmit_ByCampus.R')
runApp('UCAdmit_AllCampuses.R')
install.packages("shinydashboard")
runApp('UCAdmit_ByCampus.R')
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
#install.packages("seqinr")
#install.packages("ape")
install.packages("seqinr")
install.packages("ape")
library(ape)
library(seqinr)
?read.GenBank()
dengueseq <- read.GenBank("NC_001477")
dengueseq
dengueseq$NC_001477
View(dengueseq)
View(dengueseq)
dengueseq <- read.GenBank("NC_001477", as.character = TRUE)
dengueseq
lizards_accession_numbers <- c("JF806202", "HM161150", "FJ356743", "JF806205", "JQ073190", 	"GU457971", "FJ356741", "JF806207", "JF806210", "AY662592", "AY662591","FJ356748", "JN112660",  "AY662594", "JN112661", "HQ876437", "HQ876434", "AY662590", "FJ356740","JF806214", "JQ073188", "FJ356749", "JQ073189", "JF806216", "AY662598", "JN112653", "JF806204","FJ356747", "FJ356744", "HQ876440", "JN112651", "JF806215","JF806209")
lizards_sequences <- read.GenBank(lizards_accession_numbers)
lizards_sequences
str(lizards_sequences)
names(lizards_sequences)
attributes(lizards_sequences)
attr(lizards_sequences, "species")
lizards_sequences_GenBank_IDs <- paste(attr(lizards_sequences, "species"), names(lizards_sequences), sep ="_RAG1_")
lizards_sequences_GenBank_IDs
write.dna(lizards_sequences, file ="lizard_fasta_1.fasta", format = "fasta", append = FALSE, nbcol = 6, colsep = " ", colw = 10)
install.packages("rentrez")
library(rentrez)
lizard_search <- entrez_search(db="nuccore", term= "Basiliscus basiliscus[Organism]", retmax=40)
lizard_search
entrez_search(db="nuccore", term= "Basiliscus basiliscus[Organism] AND coi[GENE]", retmax=40)
lizard_seqs <- entrez_fetch(db="nuccore", id=lizard_search$ids, rettype="fasta")
lizard_seqs
write(lizard_seqs, "data/lizard_fasta_2.fasta", sep = "\n")
entrez_search(db="nuccore", term= "_Ornithorhynchus anatinus_[Organism] AND RAG1[GENE]", retmax=10)
spidersearch <- entrez_search(db="nuccore", term= "_Ornithorhynchus anatinus_[Organism] AND RAG1[GENE]", retmax=10)
spiderseq <- entrez_fetch(db="nucore", id=spidersearch$ids, rettype = "fasta")
spiderseq <- entrez_fetch(db="nuccore", id=spidersearch$ids, rettype = "fasta")
spidersearch <- entrez_search(db="nuccore", term= "_Ornithorhynchus anatinus_[Organism] AND RAG1[GENE]", retmax=10)
spidersearch <- entrez_search(db="nuccore", term= "_Ornithorhynchus anatinus_[Organism] AND RAG1[GENE]", retmax=10)
entrez_search(db="nuccore", term= "_Ornithorhynchus anatinus_[Organism] AND RAG1[GENE]", retmax=10)
spidersearch <- entrez_search(db="nuccore", term= "_Ornithorhynchus anatinus_[Organism] AND RAG1[GENE]", retmax=10)
spiderseq <- entrez_fetch(db="nuccore", id=spidersearch$ids, rettype = "fasta")
spiderseq <- entrez_fetch(db="nuccore", id=spidersearch$ids, rettype="fasta")
spiderseq <- entrez_fetch(db="nuccore", id=spidersearch$ids, rettype="fasta")
spiderseq <- entrez_fetch(db="nuccore", id=spidersearch$ids, rettype="fasta", retmax=10)
write(spiderseq, "data/spiderseq_fasta.fasta", sep="\n")
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library("seqinr")
library("ape")
library("seqinr")
library("ape")
dengueseq <- read.GenBank("NC_001477", as.character = TRUE)
dengueseq
write.fasta(names="DEN-1", sequences=dengueseq, file.out="data/den1.fasta")
dengue <- read.fasta(file = "data/den1.fasta")
dengue <- read.fasta(file = "data/den1.fasta")
dengueseq <- dengue[[1]]
length(dengueseq)
dengueseq <- dengue[[1]]
dengueseq
table(dengueseq)
table(dengueseq)
GC(dengueseq)
dengueseq <- dengue[[1]]
dengueseq
lizardseq <- read.GenBank(JF806202, as.character = T)
lizardseq <- read.GenBank("JF806202", as.character = T)
lizardseq <- read.GenBank("JF806202", as.character = T)
lizardseq
lizardseq <- read.GenBank("JF806202", as.character = T)
write.fasta(names="LIZ", sequences=lizardseq, file.out="data/liz.fasta")
lizardseq <- read.GenBank("JF806202", as.character = T)
write.fasta(names="LIZ", sequences=lizardseq, file.out="data/liz.fasta")
lizardseq <- read.FASTA(file = "data/liz.fasta")
lizardseq <- read.FASTA(file = "data/liz.fasta")
lizardseq <- read.FASTA(file = "data/liz.fasta")
lizardseq <- read.GenBank("JF806202", as.character = T)
write.fasta(names="LIZ", sequences=lizardseq, file.out="data/liz.fasta")
lizseq <- read.FASTA(file = "data/liz.fasta")
lizseq <- read.FASTA(file = "data/liz.fasta")
lizseq <- lizardseq[[1]]
length(lizseq)
table(lizseq)
gc(lizseq)
gc(lizseq)
GC(lizseq)
read.GenBank("JF806202", as.character = T)
lizardseq <- read.GenBank("JF806202", as.character = T)
write.fasta(names="RAG1-LIZ", sequences=lizardseq, file.out="data/rag1liz.fasta")
lizseq <- read.FASTA(file = "data/rag1liz.fasta")
lizseq <- lizardseq[[1]]
length(lizseq)
#COI sequences for 8 species of louse
louse <- read.alignment(system.file("sequences/louse.fasta", package = "seqinr"), format = "fasta")
louse$nam
#COI sequences for each louse's gopher host
gopher <- read.alignment(system.file("sequences/gopher.fasta", package = "seqinr"), format = "fasta")
gopher$nam
l.names <- readLines(system.file("sequences/louse.names", package = "seqinr"))
l.names
g.names <- readLines(system.file("sequences/gopher.names", package = "seqinr"))
g.names
louse.JC <- dist.dna(as.DNAbin(louse), model = "JC69")
gopher.JC <- dist.dna(as.DNAbin(gopher), model = "JC69")
l <- nj(louse.JC)
g <- nj(gopher.JC)
op <- par(no.readonly = TRUE)
g$tip.label <- paste(1:8, g.names)
l$tip.label <- paste(1:8, l.names)
layout(matrix(data = 1:2, nrow = 1, ncol = 2), width=c(1.4, 1))
par(mar=c(2,1,2,1))
plot(g, adj = 0.8, cex = 1.4, use.edge.length=FALSE,main = "gopher (host)", cex.main = 2)
plot(l,direction="l", use.edge.length=FALSE, cex = 1.4,main = "louse (parasite)", cex.main = 2)
par(op)
source("essai.r")
source("essai.r")
source("essai.r")
source("essai.r")
louse <- read.alignment(system.file("sequences/louse.fasta", package = "seqinr"), format = "fasta")
gopher <- read.alignment(system.file("sequences/gopher.fasta", package = "seqinr"), format = "fasta")
l.names <- readLines(system.file("sequences/louse.names", package = "seqinr"))
g.names <- readLines(system.file("sequences/gopher.names", package = "seqinr"))
library(ape)
louse.JC <- dist.dna(as.DNAbin(louse), model = "K80")
gopher.JC <- dist.dna(as.DNAbin(gopher), model = "K80")
l <- nj(louse.JC)
g <- nj(gopher.JC)
g$tip.label <- paste(1:8, g.names)
l$tip.label <- paste(1:8, l.names)
layout(matrix(data = 1:2, nrow = 1, ncol = 2), width=c(1.4, 1))
par(mar=c(2,1,2,1))
plot(g, adj = 0.8, cex = 1.4, use.edge.length=FALSE,main = "gopher (host)", cex.main = 2)
plot(l,direction="l", use.edge.length=FALSE, cex = 1.4,main = "louse (parasite)", cex.main = 2)
source("essai.r")
g$tip.label <- paste(1:8, g.names)
l$tip.label <- paste(1:8, l.names)
layout(matrix(data = 1:2, nrow = 1, ncol = 2), width=c(1.4, 1))
par(mar=c(2,1,2,1))
plot(g, adj = 0.8, cex = 1.4, use.edge.length=FALSE,main = "gopher (host)", cex.main = 2)
plot(l,direction="l", use.edge.length=FALSE, cex = 1.4,main = "louse (parasite)", cex.main = 2)
cdc_raw <- readr::read_csv("cdc-113-ICD10.csv")
glimpse(cdc_raw)
glimpse(cdc_raw)
cdc <- cdc_raw %>%
#remove redundant, uncessary columns
select(-c("Notes", "Year Code", "State Code", "Ten-Year Age Groups")) %>%
#remove several rows with NA values at bottom of data frame
na.omit() %>%
#NA in these data sets is coded as "Unreliable"
na_if("Unreliable") %>%
#rename column names
dplyr::rename(
state=State,
deaths=Deaths,
year=Year,
age_group= "Ten-Year Age Groups Code",
population= Population,
crude_rate = "Crude Rate",
cause_of_death = "ICD Sub-Chapter")
glimpse(cdc)
glimpse(cdc_raw)
cdc <- cdc_raw %>%
#remove redundant, uncessary columns
select(-c("Notes", "Year Code", "State Code", "Ten-Year Age Groups")) %>%
#remove several rows with NA values at bottom of data frame
na.omit() %>%
#NA in these data sets is coded as "Unreliable"
na_if("Unreliable") %>%
#rename column names
dplyr::rename(
state=State,
deaths=Deaths,
year=Year,
age_group= "Ten-Year Age Groups Code",
population= Population,
crude_rate = "Crude Rate",
cause_of_death = "ICD-10 113 Cause List")
glimpse(cdc)
cdc <- cdc_raw %>%
#remove redundant, uncessary columns
select(-c("Notes", "Year Code", "State Code", "Ten-Year Age Groups")) %>%
#remove several rows with NA values at bottom of data frame
na.omit() %>%
#NA in these data sets is coded as "Unreliable"
na_if("Unreliable") %>%
#rename column names
dplyr::rename(
state=State,
deaths=Deaths,
year=Year,
age_group= "Ten-Year Age Groups Code",
population= Population,
crude_rate = "Crude Rate",
cause_of_death = "ICD-10 113 Cause List"),
cdc <- cdc_raw %>%
#remove redundant, uncessary columns
select(-c("Notes", "Year Code", "State Code", "Ten-Year Age Groups")) %>%
#remove several rows with NA values at bottom of data frame
na.omit() %>%
#NA in these data sets is coded as "Unreliable"
na_if("Unreliable") %>%
#rename column names
dplyr::rename(
state=State,
deaths=Deaths,
year=Year,
age_group= "Ten-Year Age Groups Code",
population= Population,
crude_rate = "Crude Rate",
cause_of_death = "ICD-10 113 Cause List",
cause_of_death_code = "ICD-10 113 Cause List Code")
glimpse(cdc)
